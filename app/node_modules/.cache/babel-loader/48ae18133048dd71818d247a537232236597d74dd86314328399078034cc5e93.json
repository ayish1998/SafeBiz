{"ast":null,"code":"var _jsxFileName = \"/workspaces/SentriBiz/app/src/components/StartAssessment.js\",\n  _s = $RefreshSig$();\n// StartAssessment.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../assets/css/assessment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StartAssessment = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!accessToken) {\n      navigate('/login');\n    } else {\n      fetchAssessmentQuestions();\n    }\n  }, [navigate]);\n  const fetchAssessmentQuestions = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/assessment/questions/', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch questions');\n      const data = await response.json();\n      setQuestions(data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n      setErrorMessage('Failed to load assessment questions.');\n    }\n  };\n  const handleChange = (questionId, value) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: value\n    }));\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < questions[currentSectionIndex].questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else if (currentSectionIndex < questions.length - 1) {\n      setCurrentSectionIndex(currentSectionIndex + 1);\n      setCurrentQuestionIndex(0);\n    } else {\n      handleSubmit();\n    }\n  };\n  const handleBack = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    } else if (currentSectionIndex > 0) {\n      setCurrentSectionIndex(currentSectionIndex - 1);\n      setCurrentQuestionIndex(questions[currentSectionIndex - 1].questions.length - 1);\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/assessment/submit/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        },\n        body: JSON.stringify({\n          answers: answers,\n          questions: questions // Add the questions being answered\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log(result);\n        // Redirect to the Submission page\n        navigate('/assessments/submission');\n      } else {\n        const errorData = await response.json();\n        setErrorMessage(errorData.error || 'Failed to submit answers.');\n      }\n    } catch (error) {\n      console.error('Error submitting answers:', error);\n      setErrorMessage('An error occurred while submitting.');\n    }\n  };\n  const handleSignOut = () => {\n    localStorage.removeItem('accessToken');\n    navigate('/login');\n  };\n  const currentSection = questions[currentSectionIndex];\n  const currentQuestion = currentSection ? currentSection.questions[currentQuestionIndex] : null;\n\n  // Calculate total number of questions\n  const totalQuestions = questions.reduce((total, section) => total + section.questions.length, 0);\n  const currentQuestionNumber = currentSectionIndex === 0 ? currentQuestionIndex + 1 : questions.slice(0, currentSectionIndex).reduce((total, section) => total + section.questions.length, 0) + currentQuestionIndex + 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assessment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/Images/logo.png\",\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signout-button\",\n        onClick: handleSignOut,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-container container\",\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 34\n      }, this), currentSection && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-container\",\n        children: [(currentQuestionIndex > 0 || currentSectionIndex > 0) && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBack,\n          className: \"back-button\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"progress-indicator\",\n          children: [currentQuestionNumber, \"/\", totalQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: currentSection.section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"question-text\",\n            children: currentQuestion.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this), currentQuestion.type === 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            onChange: e => handleChange(currentQuestion.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 37\n          }, this), currentQuestion.type === 'single-choice' && currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: option,\n              name: `question-${currentQuestion.id}`,\n              onChange: () => {\n                handleChange(currentQuestion.id, option);\n                if (option !== 'Other') {\n                  handleChange(`${currentQuestion.id}_other`, ''); // Clear \"Other\" text\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 41\n            }, this), option, option === 'Other' && answers[currentQuestion.id] === option && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input-field\",\n              placeholder: \"Please specify\",\n              onChange: e => handleChange(`${currentQuestion.id}_other`, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 45\n            }, this)]\n          }, option, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 37\n          }, this)), currentQuestion.type === 'multiple-choice' && currentQuestion.options.map(option => {\n            var _answers$currentQuest;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                value: option,\n                onChange: e => {\n                  const newValue = e.target.checked ? [...(answers[currentQuestion.id] || []), option] : (answers[currentQuestion.id] || []).filter(o => o !== option);\n                  handleChange(currentQuestion.id, newValue);\n                  if (option === 'Other' && !e.target.checked) {\n                    handleChange(`${currentQuestion.id}_other`, ''); // Clear \"Other\" text\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 41\n              }, this), option, option === 'Other' && ((_answers$currentQuest = answers[currentQuestion.id]) === null || _answers$currentQuest === void 0 ? void 0 : _answers$currentQuest.includes(option)) && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input-field\",\n                placeholder: \"Please specify\",\n                onChange: e => handleChange(`${currentQuestion.id}_other`, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 45\n              }, this)]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navigation-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNext,\n              children: currentSectionIndex === questions.length - 1 && currentQuestionIndex === currentSection.questions.length - 1 ? 'Submit' : 'Next'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(StartAssessment, \"5FNbC3jT1du3VIvEDNqRMJBudMo=\", false, function () {\n  return [useNavigate];\n});\n_c = StartAssessment;\nexport default StartAssessment;\nvar _c;\n$RefreshReg$(_c, \"StartAssessment\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","StartAssessment","_s","questions","setQuestions","currentSectionIndex","setCurrentSectionIndex","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","errorMessage","setErrorMessage","navigate","accessToken","localStorage","getItem","fetchAssessmentQuestions","response","fetch","headers","ok","Error","data","json","error","console","handleChange","questionId","value","prevAnswers","handleNext","length","handleSubmit","handleBack","method","body","JSON","stringify","result","log","errorData","handleSignOut","removeItem","currentSection","currentQuestion","totalQuestions","reduce","total","section","currentQuestionNumber","slice","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","type","onChange","e","id","target","options","map","option","name","placeholder","_answers$currentQuest","newValue","checked","filter","o","includes","_c","$RefreshReg$"],"sources":["/workspaces/SentriBiz/app/src/components/StartAssessment.js"],"sourcesContent":["// StartAssessment.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../assets/css/assessment.css';\n\nconst StartAssessment = () => {\n    const [questions, setQuestions] = useState([]);\n    const [currentSectionIndex, setCurrentSectionIndex] = useState(0);\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [answers, setAnswers] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const accessToken = localStorage.getItem('accessToken');\n        if (!accessToken) {\n            navigate('/login');\n        } else {\n            fetchAssessmentQuestions();\n        }\n    }, [navigate]);\n\n    const fetchAssessmentQuestions = async () => {\n        try {\n            const response = await fetch('http://localhost:8000/api/assessment/questions/', {\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n                },\n            });\n            if (!response.ok) throw new Error('Failed to fetch questions');\n            const data = await response.json();\n            setQuestions(data);\n        } catch (error) {\n            console.error('Error fetching questions:', error);\n            setErrorMessage('Failed to load assessment questions.');\n        }\n    };\n\n    const handleChange = (questionId, value) => {\n        setAnswers((prevAnswers) => ({\n            ...prevAnswers,\n            [questionId]: value,\n        }));\n    };\n\n    const handleNext = () => {\n        if (currentQuestionIndex < questions[currentSectionIndex].questions.length - 1) {\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n        } else if (currentSectionIndex < questions.length - 1) {\n            setCurrentSectionIndex(currentSectionIndex + 1);\n            setCurrentQuestionIndex(0);\n        } else {\n            handleSubmit();\n        }\n    };\n\n    const handleBack = () => {\n        if (currentQuestionIndex > 0) {\n            setCurrentQuestionIndex(currentQuestionIndex - 1);\n        } else if (currentSectionIndex > 0) {\n            setCurrentSectionIndex(currentSectionIndex - 1);\n            setCurrentQuestionIndex(questions[currentSectionIndex - 1].questions.length - 1);\n        }\n    };\n\n    const handleSubmit = async () => {\n        try {\n            const response = await fetch('http://localhost:8000/api/assessment/submit/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n                },\n                body: JSON.stringify({\n                    answers: answers,\n                    questions: questions, // Add the questions being answered\n                }),\n            });\n    \n            if (response.ok) {\n                const result = await response.json();\n                console.log(result);\n                // Redirect to the Submission page\n                navigate('/assessments/submission');\n            } else {\n                const errorData = await response.json();\n                setErrorMessage(errorData.error || 'Failed to submit answers.');\n            }\n        } catch (error) {\n            console.error('Error submitting answers:', error);\n            setErrorMessage('An error occurred while submitting.');\n        }\n    };\n    \n\n    const handleSignOut = () => {\n        localStorage.removeItem('accessToken');\n        navigate('/login');\n    };\n\n    const currentSection = questions[currentSectionIndex];\n    const currentQuestion = currentSection ? currentSection.questions[currentQuestionIndex] : null;\n\n    // Calculate total number of questions\n    const totalQuestions = questions.reduce((total, section) => total + section.questions.length, 0);\n    const currentQuestionNumber = currentSectionIndex === 0 \n        ? currentQuestionIndex + 1 \n        : questions.slice(0, currentSectionIndex).reduce((total, section) => total + section.questions.length, 0) + currentQuestionIndex + 1;\n\n    return (\n        <div className=\"assessment-page\">\n            {/* Navbar */}\n            <nav className=\"navbar\">\n                <div className=\"navbar-logo\">\n                    <img src=\"/Images/logo.png\" alt=\"Logo\" />\n                </div>\n                <button className=\"signout-button\" onClick={handleSignOut}>Sign Out</button>\n            </nav>\n\n            {/* Main Assessment Content */}\n            <div className=\"questions-container container\">\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n                {currentSection && (\n                    <div className=\"section-container\">\n                        {/* Render Back button */}\n                        {(currentQuestionIndex > 0 || currentSectionIndex > 0) && (\n                            <button onClick={handleBack} className=\"back-button\">Back</button>\n                        )}\n                        <h3 className=\"progress-indicator\">{currentQuestionNumber}/{totalQuestions}</h3>\n                        <h3 className=\"section-title\">{currentSection.section}</h3>\n                        {currentQuestion && (\n                            <div className=\"question-container\">\n                                <label className=\"question-text\">{currentQuestion.text}</label>\n\n                                {/* Render text input */}\n                                {currentQuestion.type === 'text' && (\n                                    <input\n                                        type=\"text\"\n                                        className=\"input-field\"\n                                        onChange={(e) => handleChange(currentQuestion.id, e.target.value)}\n                                    />\n                                )}\n\n                                {/* Render single-choice options */}\n                                {currentQuestion.type === 'single-choice' && currentQuestion.options.map(option => (\n                                    <div key={option}>\n                                        <input\n                                            type=\"radio\"\n                                            value={option}\n                                            name={`question-${currentQuestion.id}`}\n                                            onChange={() => {\n                                                handleChange(currentQuestion.id, option);\n                                                if (option !== 'Other') {\n                                                    handleChange(`${currentQuestion.id}_other`, ''); // Clear \"Other\" text\n                                                }\n                                            }}\n                                        />\n                                        {option}\n                                        {option === 'Other' && answers[currentQuestion.id] === option && (\n                                            <input\n                                                type=\"text\"\n                                                className=\"input-field\"\n                                                placeholder=\"Please specify\"\n                                                onChange={(e) => handleChange(`${currentQuestion.id}_other`, e.target.value)}\n                                            />\n                                        )}\n                                    </div>\n                                ))}\n\n                                {/* Render multiple-choice options */}\n                                {currentQuestion.type === 'multiple-choice' && currentQuestion.options.map(option => (\n                                    <div key={option}>\n                                        <input\n                                            type=\"checkbox\"\n                                            value={option}\n                                            onChange={(e) => {\n                                                const newValue = e.target.checked\n                                                    ? [...(answers[currentQuestion.id] || []), option]\n                                                    : (answers[currentQuestion.id] || []).filter(o => o !== option);\n                                                handleChange(currentQuestion.id, newValue);\n                                                if (option === 'Other' && !e.target.checked) {\n                                                    handleChange(`${currentQuestion.id}_other`, ''); // Clear \"Other\" text\n                                                }\n                                            }}\n                                        />\n                                        {option}\n                                        {option === 'Other' && answers[currentQuestion.id]?.includes(option) && (\n                                            <input\n                                                type=\"text\"\n                                                className=\"input-field\"\n                                                placeholder=\"Please specify\"\n                                                onChange={(e) => handleChange(`${currentQuestion.id}_other`, e.target.value)}\n                                            />\n                                        )}\n                                    </div>\n                                ))}\n\n                                <div className=\"navigation-buttons\">\n                                    {/* Render Next/Submit button */}\n                                    <button onClick={handleNext}>\n                                        {currentSectionIndex === questions.length - 1 && currentQuestionIndex === currentSection.questions.length - 1\n                                            ? 'Submit'\n                                            : 'Next'}\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default StartAssessment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}