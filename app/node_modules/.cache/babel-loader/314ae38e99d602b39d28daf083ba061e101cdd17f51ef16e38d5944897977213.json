{"ast":null,"code":"var _jsxFileName = \"/workspaces/SentriBiz/app/src/components/Submission.js\",\n  _s = $RefreshSig$();\n// Submission.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../assets/css/assessment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Submission = () => {\n  _s();\n  const navigate = useNavigate();\n  const [progress, setProgress] = useState(0);\n  const [isAnalysisComplete, setIsAnalysisComplete] = useState(false);\n  useEffect(() => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!accessToken) {\n      navigate('/login', {\n        state: {\n          message: 'Please log in to view your recommendations.',\n          redirectTo: '/assessments/submission' // Redirect after login\n        }\n      });\n    } else {\n      // Start AI analysis after navigating to the submission page\n      startAnalysis();\n    }\n  }, [navigate]);\n\n  // Simulate AI analysis process\n  const startAnalysis = () => {\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          setIsAnalysisComplete(true);\n          return 100;\n        }\n        return prev + 10; // Increase progress every second\n      });\n    }, 1000);\n  };\n\n  // Function to handle sign out\n  const signOut = () => {\n    localStorage.removeItem('accessToken');\n    navigate('/login'); // Redirect to login page after signing out\n  };\n\n  // Redirect to recommendations after analysis is complete\n  useEffect(() => {\n    if (isAnalysisComplete) {\n      navigate('/assessments/recommendations');\n    }\n  }, [isAnalysisComplete, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"submission-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/Images/logo.png\",\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signout-button\",\n        onClick: signOut,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank You for Your Submission!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your responses are being analyzed. Please wait a moment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${progress}%`\n        },\n        children: [progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), isAnalysisComplete && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Analysis complete! Redirecting to your recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Submission, \"SghVP4lxIT4CDjDmOSg0nqHtXec=\", false, function () {\n  return [useNavigate];\n});\n_c = Submission;\nexport default Submission;\nvar _c;\n$RefreshReg$(_c, \"Submission\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Submission","_s","navigate","progress","setProgress","isAnalysisComplete","setIsAnalysisComplete","accessToken","localStorage","getItem","state","message","redirectTo","startAnalysis","interval","setInterval","prev","clearInterval","signOut","removeItem","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","_c","$RefreshReg$"],"sources":["/workspaces/SentriBiz/app/src/components/Submission.js"],"sourcesContent":["// Submission.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../assets/css/assessment.css'; \n\nconst Submission = () => {\n    const navigate = useNavigate();\n    const [progress, setProgress] = useState(0);\n    const [isAnalysisComplete, setIsAnalysisComplete] = useState(false);\n\n    useEffect(() => {\n        const accessToken = localStorage.getItem('accessToken');\n        if (!accessToken) {\n            navigate('/login', { \n                state: { \n                    message: 'Please log in to view your recommendations.',\n                    redirectTo: '/assessments/submission'  // Redirect after login\n                }\n            });\n        } else {\n            // Start AI analysis after navigating to the submission page\n            startAnalysis();\n        }\n    }, [navigate]);\n\n    // Simulate AI analysis process\n    const startAnalysis = () => {\n        const interval = setInterval(() => {\n            setProgress(prev => {\n                if (prev >= 100) {\n                    clearInterval(interval);\n                    setIsAnalysisComplete(true);\n                    return 100;\n                }\n                return prev + 10; // Increase progress every second\n            });\n        }, 1000);\n    };\n\n    // Function to handle sign out\n    const signOut = () => {\n        localStorage.removeItem('accessToken');\n        navigate('/login'); // Redirect to login page after signing out\n    };\n\n    // Redirect to recommendations after analysis is complete\n    useEffect(() => {\n        if (isAnalysisComplete) {\n            navigate('/assessments/recommendations');\n        }\n    }, [isAnalysisComplete, navigate]);\n\n    return (\n        <div className=\"submission-page\">\n            <nav className=\"navbar\">\n                <div className=\"navbar-logo\">\n                    <img src=\"/Images/logo.png\" alt=\"Logo\" />\n                </div>\n                <button className=\"signout-button\" onClick={signOut}>Sign Out</button>\n            </nav>\n            <div className=\"container\">\n                <h2>Thank You for Your Submission!</h2>\n                <p>Your responses are being analyzed. Please wait a moment...</p>\n                <div className=\"progress-bar\" style={{ width: `${progress}%` }}>\n                    {progress}%\n                </div>\n                {isAnalysisComplete && <p>Analysis complete! Redirecting to your recommendations...</p>}\n            </div>\n        </div>\n    );\n};\n\nexport default Submission;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}